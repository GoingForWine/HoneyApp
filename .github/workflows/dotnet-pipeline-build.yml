# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore HoneyWebPlatform.Web/HoneyWebPlatform.Web.csproj

    - name: Build
      run: dotnet build HoneyWebPlatform.Web/HoneyWebPlatform.Web.csproj --no-restore

    - name: Test
      run: dotnet test HoneyWebPlatform.Web/HoneyWebPlatform.Web.csproj --no-build --verbosity normal

    - name: Deploy to Server
      if: success()  # Only run deployment if the previous steps were successful
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_HOST: vpulegal.com
        SSH_USER: vpulegal
        TARGET_DIR: /home/vpulegal/domains/vpulegal.com/public_html  # Note the leading "/"
      run: |
        # Start the SSH agent and add the private key
        eval $(ssh-agent -s)
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        
        # Ensure the SSH directory and known_hosts file exist with the right permissions
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
        
        # Deploy the application using rsync
        rsync -avz --exclude='**/obj/**' --exclude='**/bin/**' ./HoneyWebPlatform.Web/ $SSH_USER@$SSH_HOST:$TARGET_DIR/
        
        # Optionally restart the web server (Nginx)
        ssh $SSH_USER@$SSH_HOST 'sudo systemctl restart nginx'
